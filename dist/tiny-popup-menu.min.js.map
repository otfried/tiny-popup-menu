{"version":3,"file":"tiny-popup-menu.min.js","sources":["../node_modules/tiny-emitter/index.js","../src/@enums.ts","../src/myPragma.ts","../src/defaults.ts","../src/tiny-popup-menu.tsx","../src/index-umd.ts"],"sourcesContent":["function E () {\n  // Keep this empty so it's easier to inherit from\n  // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)\n}\n\nE.prototype = {\n  on: function (name, callback, ctx) {\n    var e = this.e || (this.e = {});\n\n    (e[name] || (e[name] = [])).push({\n      fn: callback,\n      ctx: ctx\n    });\n\n    return this;\n  },\n\n  once: function (name, callback, ctx) {\n    var self = this;\n    function listener () {\n      self.off(name, listener);\n      callback.apply(ctx, arguments);\n    };\n\n    listener._ = callback\n    return this.on(name, listener, ctx);\n  },\n\n  emit: function (name) {\n    var data = [].slice.call(arguments, 1);\n    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();\n    var i = 0;\n    var len = evtArr.length;\n\n    for (i; i < len; i++) {\n      evtArr[i].fn.apply(evtArr[i].ctx, data);\n    }\n\n    return this;\n  },\n\n  off: function (name, callback) {\n    var e = this.e || (this.e = {});\n    var evts = e[name];\n    var liveEvents = [];\n\n    if (evts && callback) {\n      for (var i = 0, len = evts.length; i < len; i++) {\n        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\n          liveEvents.push(evts[i]);\n      }\n    }\n\n    // Remove event from queue to prevent memory leak\n    // Suggested by https://github.com/lazd\n    // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910\n\n    (liveEvents.length)\n      ? e[name] = liveEvents\n      : delete e[name];\n\n    return this;\n  }\n};\n\nmodule.exports = E;\nmodule.exports.TinyEmitter = E;\n","/**\n * Available menu positions\n */\nexport enum Position {\n    Top = 'top',\n    Bottom = 'bottom'\n}\n\nexport enum SubmenuPosition {\n    Left = 'left',\n    Right = 'right'\n}\n","export default function createElement(\n    tagName,\n    attrs = {},\n    ...children\n): HTMLElement {\n    if (typeof tagName === 'function') return tagName(attrs, children);\n\n    const elem =\n        tagName === null\n            ? new DocumentFragment()\n            : document.createElement(tagName);\n\n    Object.entries(attrs || {}).forEach(([name, value]) => {\n        if (\n            typeof value !== undefined &&\n            value !== null &&\n            value !== undefined\n        ) {\n            if (name.startsWith('on') && name.toLowerCase() in window)\n                elem.addEventListener(name.toLowerCase().substr(2), value);\n            else {\n                if (name === 'className')\n                    elem.setAttribute('class', value.toString());\n                else if (name === 'htmlFor')\n                    elem.setAttribute('for', value.toString());\n                else elem.setAttribute(name, value.toString());\n            }\n        }\n    });\n\n    for (const child of children) {\n        if (!child) continue;\n        if (Array.isArray(child)) elem.append(...child);\n        else {\n            if (child.nodeType === undefined) elem.innerHTML += child;\n            else elem.appendChild(child);\n        }\n    }\n    return elem;\n}\n","import { Position } from './@enums.js';\nimport { Options } from './tiny-popup-menu.js';\n\nexport const defaultOptions: Options = {\n    position: Position.Bottom,\n    className: '',\n    autoClose: true,\n    arrow: true,\n    margin: undefined, // autocalculate later\n    offset: {\n        x: 0,\n        y: 0\n    },\n    menuItems: [],\n    stopClick: true\n};\n","import { TinyEmitter } from 'tiny-emitter';\n\nimport myPragma from './myPragma';\n\nimport './assets/scss/tiny-popup-menu.scss';\nimport { defaultOptions } from './defaults.js';\nimport { Position, SubmenuPosition } from './@enums.js';\n\nimport arrowLeft from './assets/svg/arrow_left.svg';\nimport arrowRight from './assets/svg/arrow_right.svg';\n\nconst ID = 'popup-menu';\nconst CLASS_CONTAINER = ID + '--container';\nconst CLASS_OPEN = ID + '--active';\nconst CLASS_SHOW_ARROW = ID + '--show-arrow';\nconst CLASS_SHOW_ARROW_TOP = ID + '--show-arrow-top';\nconst CLASS_SHOW_ARROW_BOTTOM = ID + '--show-arrow-bottom';\nconst CLASS_ITEM = ID + '--item';\nconst CLASS_SUBMENU = ID + '--submenu';\nconst CLASS_SUBMENU_ARROW = ID + '--submenu-arrow';\nconst CLASS_SUBMENU_CONTENT = ID + '--submenu-content';\nconst CLASS_ITEM_SEPARATOR = ID + '--item-separator';\n\n// Count the running instances to add a unique id at each one\nlet instances = 1;\n\n/**\n *\n * @param target\n * @param sources\n * @returns\n */\nconst deepObjectAssign = (target, ...sources) => {\n    sources.forEach((source) => {\n        Object.keys(source).forEach((key) => {\n            const s_val = source[key];\n            const t_val = target[key];\n            target[key] =\n                t_val &&\n                s_val &&\n                typeof t_val === 'object' &&\n                typeof s_val === 'object' &&\n                !Array.isArray(t_val) // Don't merge arrays\n                    ? deepObjectAssign(t_val, s_val)\n                    : s_val;\n        });\n    });\n    return target;\n};\n\n/**\n * Tiny vanilla javascript library to display popup menus next to button togglers.\n *\n * The popup menu uses a fixed position calculated by javascript, allowing the toggler to be inside of scrollables elements, auto adjust margins, evaluate the position (to be on top or at the bottom of the toggler), etc.\n *\n * If you want only one menu open at a time, use one instance. Instead if you want multiples menus opened at the same time, create multiples instances.\n *\n * @fires open\n * @fires close\n * @fires updateposition\n * @extends TinyEmitter\n */\nexport default class TinyPopupMenu extends TinyEmitter {\n    private _isOpen = false;\n    private _toggler: HTMLElement;\n    private _containerMenu: HTMLElement;\n    private _menuItemsList: HTMLElement[];\n    private _instanceOptions: Options;\n    private _options: OpenOptions;\n\n    private _closeListener: (evt: CustomEvent) => void;\n    private _resizeListener: (evt: CustomEvent) => void;\n    private _scrollListener: (evt: CustomEvent) => void;\n\n    constructor(options: Options = null) {\n        super();\n        this._containerMenu = <div id={`${ID}-${instances}`}></div>;\n        this._instanceOptions = options;\n        instances++;\n    }\n\n    /**\n     * Open Menu\n     * @fires open\n     * @param options\n     * @returns\n     */\n    public open(options: OpenOptions): void {\n        this._options = this._parseOptions(options) as OpenOptions;\n\n        if (this.isOpen()) {\n            // clean menu items\n            this.close();\n\n            // if the same button is clicked, do not reopen\n            if (options.event.currentTarget === this._toggler) {\n                if (this._options.stopClick) {\n                    options.event.preventDefault();\n                    options.event.stopPropagation();\n                }\n                return;\n            }\n        }\n\n        const { event, menuItems, autoClose, stopClick } = this._options;\n\n        this._toggler = event.currentTarget as HTMLElement;\n\n        let hasSubmenu = false;\n\n        this._menuItemsList = menuItems.map((item) => {\n            if (item === '-') {\n                return <span className={CLASS_ITEM_SEPARATOR}></span>;\n            } else if ('items' in item) {\n                hasSubmenu = true;\n                return this._processSubMenu(item, autoClose);\n            } else {\n                return this._processMenuItem(item, autoClose);\n            }\n        });\n\n        this._isOpen = true;\n\n        this.updatePosition();\n\n        if (hasSubmenu) {\n            this._updateSubmenusPosition();\n        }\n\n        // delay to prevent click be fired inmediatly if `stopClick` is false\n        setTimeout(() => {\n            this.addEventListeners();\n        });\n\n        this.emit('open');\n\n        if (stopClick) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n\n    /**\n     * Close menu\n     *\n     * @fires close\n     */\n    public close(): void {\n        if (!this.isOpen()) return;\n\n        this._containerMenu.innerHTML = '';\n        this._containerMenu.remove();\n\n        this._toggler.classList.remove(CLASS_OPEN);\n        this.removeEventListeners();\n        this._isOpen = false;\n        this.emit('close');\n    }\n\n    /**\n     * Update the position of an opened menu\n     *\n     * @fires updateposition\n     */\n    public updatePosition(silent = true): void {\n        /**\n         * Check if the default position is ok or needs to be inverted\n         */\n        const evaluatePosition = (): PositionType => {\n            if (position === Position.Top) {\n                if (\n                    togglerPosition.top - menuHeight - offsetTop - margin <=\n                    0\n                ) {\n                    return Position.Bottom;\n                }\n            } else if (position === Position.Bottom) {\n                if (\n                    togglerPosition.top +\n                        menuHeight +\n                        offsetTop +\n                        togglerHeight +\n                        margin >=\n                    document.documentElement.offsetHeight\n                ) {\n                    return Position.Top;\n                }\n            }\n\n            return position;\n        };\n\n        if (!this.isOpen()) return;\n\n        const { event, offset, className, arrow, position, margin } = this._options;\n\n        this._containerMenu.style.position = 'fixed';\n        this._containerMenu.className = className;\n        this._containerMenu.classList.add(ID);\n\n        if (arrow) {\n            this._containerMenu.classList.add(CLASS_SHOW_ARROW);\n        }\n\n        this._containerMenu.innerHTML = '';\n        this._containerMenu.append(\n            <div className={CLASS_CONTAINER}>{...this._menuItemsList}</div>\n        );\n\n        document.body.append(this._containerMenu);\n\n        const togglerPosition = this._toggler.getBoundingClientRect();\n\n        const togglerHeight = this._toggler.offsetHeight;\n        const togglerWidth = this._toggler.offsetWidth;\n\n        const offsetLeft = offset?.x || 0;\n        const offsetTop = offset?.y || 0;\n\n        // Button height + menu height\n        const menuHeight = this._containerMenu.offsetHeight;\n        const menuWidth = this._containerMenu.offsetWidth;\n\n        // If menu is near a window limit, invert the direction\n        const finalPosition = evaluatePosition();\n\n        let compensateMenuHeight = 0;\n\n        switch (finalPosition) {\n            case Position.Bottom:\n                compensateMenuHeight = offsetTop + togglerHeight + margin;\n                break;\n            case Position.Top:\n                compensateMenuHeight = -menuHeight - margin;\n                break;\n        }\n\n        const compensateMenuWidthToCenter = -menuWidth / 2 + togglerWidth / 2;\n\n        const windowWidth = window.innerWidth;\n\n        const calcualteLeft =\n            togglerPosition.left + offsetLeft + compensateMenuWidthToCenter;\n\n        let adjustX = 0;\n\n        // it's outside the left border\n        if (calcualteLeft < 0) {\n            adjustX = 0 - calcualteLeft + margin;\n        } else if (calcualteLeft + menuWidth > windowWidth) {\n            // it's outside the right border\n            adjustX = windowWidth - (calcualteLeft + menuWidth) - margin;\n        }\n\n        if (event.currentTarget instanceof HTMLCanvasElement) {\n            this._containerMenu.style.left = event.clientX + 'px';\n            this._containerMenu.style.top = event.clientY + 'px';  \n        } else {\n        this._containerMenu.style.left = calcualteLeft + adjustX + 'px';\n        this._containerMenu.style.top =\n            togglerPosition.top + compensateMenuHeight + 'px';\n        }\n\n        this._toggler.classList.add(CLASS_OPEN);\n\n        if (arrow) {\n            const arrowWidth = 8;\n            const extraMargin = 3;\n            if (adjustX > 0) {\n                // Prevent the arrow go outside the menu width\n                adjustX = Math.min(\n                    menuWidth / 2 - arrowWidth - extraMargin,\n                    adjustX\n                );\n            } else {\n                adjustX = Math.max(\n                    -(menuWidth / 2 - (arrowWidth + extraMargin) * 2),\n                    adjustX\n                );\n            }\n\n            // displace X css arrow\n            this._containerMenu.style.setProperty(\n                '--ofx',\n                `${adjustX + arrowWidth}px`\n            );\n            this._evaluateArrowPosition(finalPosition);\n        }\n\n        if (!silent) {\n            this.emit('updateposition');\n        }\n    }\n\n    /**\n     * Instead of creating onclick listeners on each toggler/button,\n     * you can add these using the `addToggler` method\n     *\n     * @param el\n     * @param options\n     * @param type\n     */\n    public addToggler(\n        el: HTMLElement,\n        options: Options = {},\n        type: 'click' | 'contextmenu' = 'click'\n    ): void {\n        if (type === 'contextmenu') {\n            el.addEventListener('contextmenu', (event) =>\n                this.open({ ...options, event })\n            );\n        } else {\n            el.addEventListener('click', (event) =>\n                this.open({ ...options, event })\n            );\n        }\n    }\n\n    /**\n     * Retunrs true if the insatance has an open menu\n     *\n     * @returns\n     */\n    public isOpen(): boolean {\n        return this._isOpen;\n    }\n\n    /**\n     * Merge default options, instance options, and single open method options\n     * @param options\n     * @returns\n     */\n    protected _parseOptions(options: Options): Options | OpenOptions {\n        const mergedOptions = deepObjectAssign(\n            {},\n            defaultOptions,\n            this._instanceOptions || {},\n            options || {}\n        );\n\n        // if margin is not setled, add a default ones\n        if (mergedOptions.margin === undefined) {\n            mergedOptions.margin = (\n                'arrow' in mergedOptions ? mergedOptions.arrow : true\n            )\n                ? 10\n                : 2;\n        }\n\n        return mergedOptions;\n    }\n\n    /**\n     *\n     * @param submenu\n     * @param autoClose\n     */\n    protected _processSubMenu(\n        submenu: Submenu,\n        autoClose: boolean\n    ): HTMLElement {\n        return (\n            <div\n                className={CLASS_SUBMENU + ' ' + (submenu.className || '')}\n                id={submenu.id}\n                style={submenu.style}\n                data-position={submenu.position || SubmenuPosition.Right}\n            >\n                <span>{submenu.content}</span>\n                <div className={CLASS_SUBMENU_ARROW}></div>\n                <div className={CLASS_SUBMENU_CONTENT}>\n                    {submenu.items.map((item) =>\n                        this._processMenuItem(item, autoClose)\n                    )}\n                </div>\n            </div>\n        );\n    }\n\n    /**\n     *\n     * @param item\n     * @param autoClose\n     */\n    protected _processMenuItem(\n        item: MenuItem,\n        autoClose: boolean\n    ): HTMLElement {\n        return (\n            <div\n                className={CLASS_ITEM + ' ' + (item.className || '')}\n                onClick={\n                    item.callback\n                        ? (event: MouseEvent) => {\n                              item.callback(event);\n                              if (autoClose) this.close();\n                          }\n                        : null\n                }\n                id={item.id}\n                style={item.style}\n            >\n                {item.content}\n            </div>\n        );\n    }\n\n    /**\n     *\n     */\n    protected _updateSubmenusPosition() {\n        const submenus = this._containerMenu.querySelectorAll<HTMLElement>(\n            '.' + CLASS_SUBMENU\n        );\n\n        submenus.forEach((submenu) => {\n            const position = submenu.dataset.position as SubmenuPosition;\n            const submenuContent = submenu.querySelector<HTMLElement>(\n                '.' + CLASS_SUBMENU_CONTENT\n            );\n\n            const submenuPosition = submenuContent.getBoundingClientRect();\n            const submenuWidth = submenuContent.offsetWidth;\n\n            /**\n             * Check if the default position is ok or needs to be inverted\n             */\n            const evaluatePosition = (): SubmenuPosition => {\n                if (position === SubmenuPosition.Left) {\n                    if (submenuPosition.right - submenuWidth <= 0) {\n                        return SubmenuPosition.Right;\n                    }\n                } else if (position === SubmenuPosition.Right) {\n                    if (\n                        submenuPosition.right + submenuWidth >=\n                        document.documentElement.offsetWidth\n                    ) {\n                        return SubmenuPosition.Left;\n                    }\n                }\n\n                return position;\n            };\n\n            const calculatedPosition = evaluatePosition();\n            submenu.classList.add(CLASS_SUBMENU + '-' + calculatedPosition);\n\n            // add arrow indicator\n            const submenuArrow = submenu.querySelector<HTMLElement>(\n                '.' + CLASS_SUBMENU_ARROW\n            );\n            submenuArrow.innerHTML = '';\n\n            if (calculatedPosition === SubmenuPosition.Left) {\n                submenuArrow.append(arrowLeft());\n            } else if (position === SubmenuPosition.Right) {\n                submenuArrow.append(arrowRight());\n            }\n        });\n    }\n\n    protected _evaluateArrowPosition(position: PositionType) {\n        let arrowPositionClass = '';\n\n        switch (position) {\n            case Position.Bottom:\n                arrowPositionClass = CLASS_SHOW_ARROW_TOP;\n                break;\n            case Position.Top:\n                arrowPositionClass = CLASS_SHOW_ARROW_BOTTOM;\n                break;\n        }\n\n        this._containerMenu.classList.add(arrowPositionClass);\n    }\n\n    protected addEventListeners(): void {\n        // Close if click is outside the menu\n        this._closeListener = (evt: CustomEvent) => {\n            if (!this._containerMenu.contains(evt.target as Node)) {\n                this.close();\n            }\n        };\n\n        this._resizeListener = () => {\n            if (this.isOpen()) {\n                this.updatePosition(false);\n            }\n        };\n\n        this._scrollListener = (evt) => {\n            if (\n                this.isOpen() &&\n                (evt.target as HTMLElement).contains(this._toggler)\n            ) {\n                this.updatePosition(false);\n            }\n        };\n\n        document.addEventListener('click', this._closeListener);\n        window.addEventListener('resize', this._resizeListener);\n        window.addEventListener('scroll', this._scrollListener, true);\n    }\n\n    protected removeEventListeners(): void {\n        document.removeEventListener('click', this._closeListener);\n        window.removeEventListener('resize', this._resizeListener);\n        window.removeEventListener('scroll', this._scrollListener);\n    }\n}\n\nexport * from './@enums.js';\n\n/**\n * Helper function to automaticaly add a separator between an array of sections\n * @param sections\n * @returns\n */\nexport function addSeparator(sections: Array<MenuItem | Submenu>[]) {\n    const separator = '-' as const;\n\n    return sections.reduce((acc, val) => {\n        return acc.length ? [...acc, separator, ...val] : [...acc, ...val];\n    }, []);\n}\n\n/**\n * **_[interface]_**\n */\nexport interface OpenOptions extends Options {\n    event: MouseEvent;\n}\n\n/**\n * **_[interface]_**\n */\nexport interface Submenu {\n    content: string | HTMLElement;\n    items: MenuItem[];\n    /**\n     * Default is right\n     */\n    position?: SubmenuPosition;\n    id?: string;\n    className?: string;\n    style?: string;\n}\n\n/**\n * **_[interface]_**\n */\nexport interface MenuItem {\n    content?: string | HTMLElement;\n    id?: string;\n    className?: string;\n    style?: string;\n    dataset?: any;\n\n    /**\n     * Function called when an item is clicked\n     * @returns\n     */\n    callback?: (evt: MouseEvent) => void;\n}\n\ntype PositionType = `${Position}`;\n\n/**\n * **_[interface]_**\n */\nexport interface Options {\n    /**\n     * Close menu after selecting an item\n     * Defaults is true;\n     */\n    autoClose?: boolean;\n\n    /**\n     * Show the menu at top or at bottom of the toggler\n     * Default is 'bottom'\n     */\n    position?: PositionType;\n\n    /**\n     * Margin between the menu and the toggler button.\n     * Default is 10 if `arrow` is true, otherwise is 2\n     */\n    margin?: number;\n\n    /**\n     * Offset to display the menu\n     */\n    offset?: {\n        x?: number;\n        y?: number;\n    };\n\n    /**\n     * Custom classname to add to the popup menu\n     */\n    className?: string;\n\n    /**\n     * Show css arrow\n     * Default is `true`\n     */\n    arrow?: boolean;\n\n    /**\n     * Prevent event propagation\n     * Default is `true`\n     */\n    stopClick?: boolean;\n\n    /**\n     * Menu items to display in the menu\n     */\n    menuItems?: Array<MenuItem | Submenu | '-'>;\n}\n","import TinyPopupMenu from './tiny-popup-menu';\nimport * as utils from './tiny-popup-menu';\n\nObject.assign(TinyPopupMenu, utils);\nexport default TinyPopupMenu;\n"],"names":["E","prototype","on","name","callback","ctx","e","this","push","fn","once","self","listener","off","apply","arguments","_","emit","data","slice","call","evtArr","i","len","length","evts","liveEvents","tinyEmitterModule","exports","Position","SubmenuPosition","TinyEmitter","createElement","tagName","attrs","children","elem","DocumentFragment","document","Object","entries","forEach","value","undefined","startsWith","toLowerCase","window","addEventListener","substr","setAttribute","toString","child","Array","isArray","append","nodeType","innerHTML","appendChild","defaultOptions","position","Bottom","className","autoClose","arrow","margin","offset","x","y","menuItems","stopClick","ID","CLASS_CONTAINER","CLASS_OPEN","CLASS_SHOW_ARROW","CLASS_SHOW_ARROW_TOP","CLASS_SHOW_ARROW_BOTTOM","CLASS_ITEM","CLASS_SUBMENU","CLASS_SUBMENU_ARROW","CLASS_SUBMENU_CONTENT","CLASS_ITEM_SEPARATOR","instances","deepObjectAssign","target","sources","source","keys","key","s_val","t_val","TinyPopupMenu","constructor","options","super","_isOpen","_containerMenu","myPragma","id","_instanceOptions","open","_options","_parseOptions","isOpen","close","event","currentTarget","_toggler","preventDefault","stopPropagation","hasSubmenu","_menuItemsList","map","item","_processSubMenu","_processMenuItem","updatePosition","_updateSubmenusPosition","setTimeout","addEventListeners","remove","classList","removeEventListeners","silent","style","add","body","togglerPosition","getBoundingClientRect","togglerHeight","offsetHeight","togglerWidth","offsetWidth","offsetLeft","offsetTop","menuHeight","menuWidth","finalPosition","Top","top","documentElement","evaluatePosition","compensateMenuHeight","compensateMenuWidthToCenter","windowWidth","innerWidth","calcualteLeft","left","adjustX","HTMLCanvasElement","clientX","clientY","arrowWidth","extraMargin","Math","min","max","setProperty","_evaluateArrowPosition","addToggler","el","type","assign","mergedOptions","submenu","Right","content","items","onClick","querySelectorAll","dataset","submenuContent","querySelector","submenuPosition","submenuWidth","calculatedPosition","Left","right","submenuArrow","arrowPositionClass","_closeListener","evt","contains","_resizeListener","_scrollListener","removeEventListener","sections","reduce","acc","val","utils"],"mappings":"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","x_google_ignoreList":[0]}